import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Button
from data.db_session import create_session
from data.users import User


class LoginModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")

        self.add_item(discord.ui.TextInput(label="–õ–æ–≥–∏–Ω"))
        self.add_item(discord.ui.TextInput(label="–ü–∞—Ä–æ–ª—å"))

    async def on_submit(self, interaction: discord.Interaction):
        db_sess = create_session()
        user = db_sess.query(User).filter(User.name == self.children[0].value).first()

        async def accept_callback(interaction: discord.Interaction):
            try:
                db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first().ds_id = None
            except:
                pass
            user.ds_id = str(interaction.user.id)
            await interaction.response.edit_message(content="–£—Å–ø–µ—à–Ω–æ")

        async def refuse_callback(interaction: discord.Interaction):
            await interaction.response.edit_message(content="–û—Ç–º–µ–Ω–µ–Ω–æ")

        if not user:
            await interaction.response.send_message("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        elif db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first() and db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first() == user:
            return await interaction.response.send_message("–í—ã —É–∂–µ –≤ –∞–∫–∫–∞—É–Ω—Ç–µ", ephemeral=True)
        elif db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first() and\
                db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first() != user and \
                user.check_password(self.children[1].value):
            button_accept = Button(label="–î–∞", style=discord.ButtonStyle.green)
            button_refuse = Button(label="–ù–µ—Ç", style=discord.ButtonStyle.red)
            button_accept.callback = accept_callback
            button_refuse.callback = refuse_callback
            view = discord.ui.View()
            view.add_item(button_accept)
            view.add_item(button_refuse)
            await interaction.response.send_message("–î–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç discord —É–∂–µ –ø—Ä–∏–≤–∑—è–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É. "
                                                    "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?", view=view, ephemeral=True)
        elif user.ds_id:
            button_accept = Button(label="–î–∞", style=discord.ButtonStyle.green)
            button_refuse = Button(label="–ù–µ—Ç", style=discord.ButtonStyle.red)
            button_accept.callback = accept_callback
            button_refuse.callback = refuse_callback
            view = discord.ui.View()
            view.add_item(button_accept)
            view.add_item(button_refuse)
            await interaction.response.send_message("–î–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø—Ä–∏–≤–∑—è–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É discord. "
                                                    "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?", view=view, ephemeral=True)
        elif user and user.check_password(self.children[1].value):
            user.ds_id = str(interaction.user.id)
            db_sess.commit()
            await interaction.response.send_message("–£—Å–ø–µ—à–Ω–æ ‚úÖ", ephemeral=True)
        else:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç", ephemeral=True)

    async def on_error(self, interaction: discord.Interaction, error: Exception) -> None:
        await interaction.response.send_message(error)


class LoginCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="login", description="login to your account")
    async def login(self, interaction: discord.Interaction):
        modal = LoginModal()
        await interaction.response.send_modal(modal)

    @app_commands.command(name="quit", description="this command will log out of your account")
    async def quit(self, interaction: discord.Interaction):
        db_sess = create_session()
        user = db_sess.query(User).filter(User.ds_id == str(interaction.user.id)).first()
        if user:
            user.ds_id = None
            db_sess.commit()
            await interaction.response.send_message("—É—Å–ø–µ—à–Ω–æ, —á–µ—Ä—Ç–∏–ª–∞ ‚úÖ", ephemeral=True)
        else:
            await interaction.response.send_message("–ù–æ —Ç—ã –≤–µ–¥—å –∏ —Ç–∞–∫ –Ω–µ –≤ –∞–∫–∫–∞—É–Ω—Ç–µ ü§® üíä üöë", ephemeral=True)
